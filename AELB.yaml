AWSTemplateFormatVersion: "2010-09-09"
# Version 1.0 - Initial version
# Version 1.1 - Add Security Group
# Version 1.2 - Update Listeners
Description: Template to create the Application Laod Balancer. Version 1.2
Parameters:
  Access:
    Type: String
    AllowedValues:
      - public
      - ised
  VPCName:
    # Type: AWS::EC2::VPC::Id
    Type: String
    Description: VPC Identifier
  SubnetAName:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: Public Subnet Identifier
  SubnetBName:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: Public Subnet Identifier
  SubnetCName:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: Public Subnet Identifier
    Default: ""
  CertsArnParam:
    Type: String    
  NumberOfAz:
    Type: String
    Default: 2
    AllowedPattern: '[2-3]'
  S3BucketNamePrefix:
    Type: AWS::SSM::Parameter::Value<String>
    Default: S3BucketNamePrefix
  AccountIDLog:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDLog
  S3Templates:
    Type: AWS::SSM::Parameter::Value<String>
    Default: S3Templates
  ISEDProjectId:
    Type: String
  CostCentre:
    Type: String
  Environment:
    Type: String

Mappings:
  AccessMap:
    public:
      SourceCidr: "0.0.0.0/0"
    ised:
      SourceCidr: "192.197.178.0/30"

Conditions:
  Has3Az: !Equals [ !Ref NumberOfAz, 3 ]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "ALB Security Group"
      VpcId: !Ref VPCName
      Tags:
      - Key: Name
        Value: !Join ['-', ["sg", !Ref "AWS::AccountId", !Ref Access, !Ref Environment ] ]
      - Key: ised-cost-centre
        Value: !Ref CostCentre
      - Key: ised-project-id
        Value: !Ref ISEDProjectId
      - Key: ised-environment
        Value: !Ref Environment
  Ingress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: !FindInMap [AccessMap, !Ref Access, SourceCidr]
  Ingress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: !FindInMap [AccessMap, !Ref Access, SourceCidr]
  AELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Join ['-', [!Ref S3BucketNamePrefix, !Ref AccountIDLog, "logs-lb"]]   
      Name: !Join ['-', ["alb", !Ref "AWS::AccountId", !Ref Access,  !Ref "Environment"]]
      #Scheme: internal
      Subnets: 
        - !Ref SubnetAName
        - !Ref SubnetBName
        - Fn::If:
          - Has3Az
          - !Ref SubnetCName
          - !Ref AWS::NoValue
      SecurityGroups:
        - !Ref SecurityGroup
      Type: application
  Listener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref CertsArnParam
      LoadBalancerArn: !Ref AELB
      SslPolicy: ELBSecurityPolicy-TLS-1-2-2017-01
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig: 
            ContentType: text/plain
            StatusCode: 503
  Listener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: Listener443 
    Properties:
      LoadBalancerArn: !Ref AELB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: redirect
          RedirectConfig: 
            Host: '#{host}'
            Path: '/#{path}'
            Port: 443
            Protocol: "HTTPS"
            Query: '#{query}'
            StatusCode: HTTP_301
  ListenerRule443Robot:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref Listener443
      Actions:
        - Type: fixed-response
          FixedResponseConfig: 
            ContentType: text/plain
            StatusCode: 200
      Conditions:
        - PathPatternConfig: 
            Values:
              - robots.txt
          Field: path-pattern
      Priority: 1
Outputs:
  AELB:
    Description: Listener443
    Value: !Ref Listener443
    Export: 
      Name: !Join ['-', ["alb", !Ref Access, !Ref "Environment" ]]
  AELBHostedZoneId:
    Description: ElasticLoadBalancer Hosted Zone ID
    Value: !GetAtt 'AELB.CanonicalHostedZoneID'
    Export: 
      Name: !Join ['-', ["alb-hosted-zone-id", !Ref Access, !Ref "Environment" ]]
  AELBHostedDNSName:
    Description: ElasticLoadBalancer DNA Name
    Value: !GetAtt 'AELB.DNSName'
    Export: 
      Name: !Join ['-', ["alb-dns-name", !Ref Access, !Ref "Environment" ]]