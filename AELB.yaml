AWSTemplateFormatVersion: "2010-09-09"
# Version 1.0 - Initial version
Parameters:
  SubnetAName:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: Public Subnet Identifier
  SubnetBName:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: Public Subnet Identifier
  SubnetCName:
    # Type: AWS::EC2::Subnet::Id
    Type: String
    Description: Public Subnet Identifier
    # Default: 'Not selected'
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket
  # CertsDomainNameParam:
  #   Type: String
  CertsArnParam:
    Type: String    
  CFTempateURLDefaultAction:
    Type: String
  NumberOfAz:
    Type: String
    Default: 2
    AllowedPattern: '[2-3]'

Conditions:

  Has3Az: !Equals [ !Ref NumberOfAz, 3 ]

Resources:
    AELB:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        LoadBalancerAttributes:
          - Key: access_logs.s3.enabled
            Value: true
          - Key: access_logs.s3.bucket
            Value: !Ref S3BucketName   
        Name: !Join ['-', [!Ref 'AWS::StackName', 'AELB']]
        Scheme: internal
        Subnets: 
          - !Ref SubnetAName
          - !Ref SubnetBName
          - Fn::If:
            - Has3Az
            - !Ref SubnetCName
            - !Ref AWS::NoValue
        Type: application
    
    ## Should all load balancer have a this default action and listener?
    CreateListener443DefaultFixedResponse:
      Type: AWS::CloudFormation::Stack
      Properties:
        TemplateURL: !Ref CFTempateURLDefaultAction
        Parameters:
          AELBarn: !Ref AELB
          DefaultType: "fixed-response"
          ListenerPort: 443
          ListenerProtocol: HTTPS
          # CertDomainName: !Ref CertsDomainNameParam
          CertArn: !Ref CertsArnParam
          CreateRobotTxtParam: "true"
          RedirectingProtocol: " "
          TargetTypeParam: " "
          TargetGroupPort: " "
          TargetGroupVPCId: " "
          TargetGroupProtocol: " "
          TargetIp: " "
          TargetPortNumber: " "
          RedirectingPort: " "
          TargetGroupName: " "
          PriorityParam: 1

      DependsOn: AELB 

    CreateListener80DefaultRedirect:
      Type: AWS::CloudFormation::Stack
      Properties:
        TemplateURL: !Ref CFTempateURLDefaultAction
        Parameters:
          AELBarn: !Ref AELB
          DefaultType: "redirect"
          ListenerPort: 80
          ListenerProtocol: HTTP
          CertArn: " "
          CreateRobotTxtParam: "true"
          RedirectingProtocol: "HTTPS"
          TargetTypeParam: " "
          TargetGroupPort: " "
          TargetGroupVPCId: " "
          TargetGroupProtocol: " "
          TargetIp: " "
          TargetPortNumber: " "
          RedirectingPort: "443"
          TargetGroupName: " "
          PriorityParam: 1

      DependsOn: CreateListener443DefaultFixedResponse 
    

Outputs:
  TestCondition:
    Description: Has3Az
    Value:
      !If
      - Has3Az
      - "It Has 3AZ"
      - "Does not have 3Az"