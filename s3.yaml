AWSTemplateFormatVersion: "2010-09-09"
# Version 1.0 - Initial version
# Version 1.1 - Add the policy to allow all organization accounts to write; Remove hardcoded tags
Description: Template to create the S3 Bucket. Version 1.1
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: "S3 Bucket Configuration"
        Parameters: 
          - Name
          - Access
          - KmsArn
      - Label: 
          default: "Tags"
        Parameters: 
          - ProjectId
          - CostCentre
          - Environment
    ParameterLabels: 
      Name: 
        default: "S3 Bucket Name"
      ProjectId: 
        default: "Project Id"
      CostCentre: 
        default: "Cost Centre"
      Environment: 
        default: "Environment"
Conditions:
  OrgRead: !Equals [ !Ref Access, OrganizationRead ]
  OrgWrite: !Equals [ !Ref Access, OrganizationWrite ]
  GuardDuty: !Equals [ !Ref Access, GuardDuty ]
  LogDelivery: !Equals [ !Ref Access, LogDelivery ]
  LogLoadBalancer: !Equals [ !Ref Access, LogLoadBalancer ]
Parameters:
  Name:
    Type: String
  KmsArn:
    Type: String
  Access:
    Type: String
    Default: Local
    AllowedValues:
      - Local
      - OrganizationRead
      - OrganizationWrite
      - LogDelivery
      - LogLoadBalancer
      - GuardDuty
  ProjectId:
    Type: String
    Default: cops-aws
  CostCentre:
    Type: String
    Default: cio-rdad
  Environment:
    Type: String
    Default: ops
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]]
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Join ['-', ["ised-s3", !Ref "AWS::AccountId", "log" ]]
        LogFilePrefix: !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name", "" ]]
      Tags:
      - Key: Name
        Value: !Join ['-', ["s3", !Ref "AWS::AccountId", "log"] ]
      - Key: ised-cost-centre
        Value: !Ref "CostCentre"
      - Key: ised-project-id
        Value: !Ref "ProjectId"
      - Key: ised-environment
        Value: !Ref "Environment"
  S3BucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Condition: OrgRead
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:ListBucket"
              - "s3:GetObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]], "/*" ]]
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]]]]
            Principal: "*"
            Condition: 
              StringEquals: 
                aws:PrincipalOrgID: 
                  - "o-2vzy0xgibx"
  S3BucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Condition: OrgWrite
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:ListBucket"
              - "s3:GetObject"
              - "s3:PutObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]], "/*" ]]
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]]]]
            Principal: "*"
            Condition: 
              StringEquals: 
                aws:PrincipalOrgID: 
                  - "o-2vzy0xgibx"
  S3BucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Condition: LogDelivery
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:PutObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]], "/*" ]]
            Principal: 
              Service: delivery.logs.amazonaws.com
            Condition: 
              StringEquals: 
                s3:x-amz-acl: 
                  - "bucket-owner-full-control"
          - Action: 
              - "s3:GetBucketAcl"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]] ]]
            Principal: 
              Service: delivery.logs.amazonaws.com
  S3BucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Condition: LogLoadBalancer
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:PutObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::",  !Join ['-', ["ised-s3", !Ref "AWS::AccountId", !Ref "Name" ]], "/*" ]]
            Principal: 
              AWS: arn:aws:iam::985666609251:root
  # See: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_exportfindings.html#guardduty_exportfindings-s3-policies
  GuardDutyS3Policy:
    Type: AWS::S3::BucketPolicy
    Condition: GuardDuty
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: "Allow GuardDuty to use the getBucketLocation operation"
            Action:
              - "s3:GetBucketLocation"
            Effect: "Allow"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
          -
            Sid: "Allow GuardDuty to upload objects to the bucket"
            Action:
              - "s3:PutObject"
            Effect: "Allow"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
          -
            Sid: "Deny unencrypted object uploads. This is optional"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption": "aws:kms"
          -
            Sid: "Deny incorrect encryption header. This is optional"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption-aws-kms-key-id": !Ref KmsArn
          -
            Sid: "Deny non-HTTPS access"
            Action:
              - "s3:*"
            Effect: "Deny"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
