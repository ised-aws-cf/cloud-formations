AWSTemplateFormatVersion: "2010-09-09"
# Version 1.0 - Initial version
# Version 1.1 - Link to s3 template, use System Manager
Description: Template to create the log S3 Bucket. Version 1.1
Parameters:
  OrganizationId:
    Type: String
  S3Templates:
    Type: AWS::SSM::Parameter::Value<String>
    Default: S3Templates 
Resources:
  S3-Bucket-Logs:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join [ '', [!Ref S3Templates, "s3.yaml" ]]
      Parameters:
        Name: log
        S3BucketPolicy: Local
        S3BucketAccess: LogDeliveryWrite
        KmsArn: NA
  S3-BucketPolicy-OrgRead: 
    Type: AWS::S3::BucketPolicy
    Condition: OrgRead
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:ListBucket"
              - "s3:GetObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::", !Ref S3Bucket, "/*" ]]
              - !Join ['', ["arn:aws:s3:::", !Ref S3Bucket]]
            Principal: "*"
            Condition: 
              StringEquals: 
                aws:PrincipalOrgID: 
                  - !Ref OrganizationId
  S3-BucketPolicy-OrgWrite: 
    Type: AWS::S3::BucketPolicy
    Condition: OrgWrite
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:ListBucket"
              - "s3:GetObject"
              - "s3:PutObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::", !Ref S3Bucket, "/*" ]]
              - !Join ['', ["arn:aws:s3:::", !Ref S3Bucket]]
            Principal: "*"
            Condition: 
              StringEquals: 
                aws:PrincipalOrgID: 
                  - !Ref OrganizationId
  S3-BucketPolicy-LogDelivery: 
    Type: AWS::S3::BucketPolicy
    Condition: LogDelivery
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:PutObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::", !Ref S3Bucket, "/*" ]]
            Principal: 
              Service: delivery.logs.amazonaws.com
            Condition: 
              StringEquals: 
                s3:x-amz-acl: 
                  - "bucket-owner-full-control"
          - Action: 
              - "s3:GetBucketAcl"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::", !Ref S3Bucket ]]
            Principal: 
              Service: delivery.logs.amazonaws.com
  S3-BucketPolicy-LogLoadBalancer: 
    Type: AWS::S3::BucketPolicy
    Condition: LogLoadBalancer
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Action: 
              - "s3:PutObject"
            Effect: "Allow"
            Resource: 
              - !Join ['', ["arn:aws:s3:::",  !Ref S3Bucket, "/*" ]]
            Principal: 
              AWS: arn:aws:iam::985666609251:root
  # See: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_exportfindings.html#guardduty_exportfindings-s3-policies
  S3-BucketPolicy-LogGuardDuty:
    Type: AWS::S3::BucketPolicy
    Condition: GuardDuty
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: "Allow GuardDuty to use the getBucketLocation operation"
            Action:
              - "s3:GetBucketLocation"
            Effect: "Allow"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
          -
            Sid: "Allow GuardDuty to upload objects to the bucket"
            Action:
              - "s3:PutObject"
            Effect: "Allow"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
          -
            Sid: "Deny unencrypted object uploads. This is optional"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption": "aws:kms"
          -
            Sid: "Deny incorrect encryption header. This is optional"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal:
              Service: "guardduty.amazonaws.com"
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption-aws-kms-key-id": !Ref KmsArn
          -
            Sid: "Deny non-HTTPS access"
            Action:
              - "s3:*"
            Effect: "Deny"
            Resource: !Join ['', [ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
