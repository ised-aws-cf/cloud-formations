AWSTemplateFormatVersion: "2010-09-09"
# Version 1.0 - Initial version
# Version 1.1 - Add Admin role trust with master
# Version 1.2 - Add Nexus role for cots account
# Version 1.3 - Added Backup role and DataLifeCycleManager role for RDS and EBS backups
#             - Added 'Condtion' in 'Outputs' section related to NexusRole, otherwise deployment fails
# Version 1.4 - Add generic ised-managed-instance-role with SSM and S3 permissions for EC2 patching
# Version 1.5 - Update to use Parameter Store
Description: Template to create all required roles. Version 1.5
Conditions:
  IsNotMaster: !Not [!Equals [ !Ref "AWS::AccountId", !Ref AccountIDMaster ]]
  IsCotsAccount: !Or [ !Equals [ !Ref "AWS::AccountId", !Ref AccountIDCots ] , !Equals [ !Ref "AWS::AccountId", !Ref AccountIDCotsDev ]]
  IsOpenShiftAccount: !Or [ !Equals [ !Ref "AWS::AccountId", !Ref AccountIDOpenShift ] , !Equals [ !Ref "AWS::AccountId", !Ref AccountIDOpenShiftDev ], !Equals [ !Ref "AWS::AccountId", !Ref AccountIDOpenShiftLab ]]
Parameters:
  AccountIDMaster:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDMaster
  AccountIDCots:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDOpenShift
  AccountIDCotsDev:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDOpenShift
  AccountIDOpenShift:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDOpenShift
  AccountIDOpenShiftDev:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDOpenShiftDev
  AccountIDOpenShiftLab:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDOpenShiftLab
Resources:
  ManagedInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ised-managed-instance-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        # Role for patching
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  ManagedInstancePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref ManagedInstanceRole
      PolicyName: ised-managed-instance-policy
      # Permissions for the EC2 to write to the patching s3 bucket
      # See: https://docs.aws.amazon.com/systems-manager/latest/userguide/setup-instance-profile.html#instance-profile-custom-s3-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:GetObject"
            Resource:
              - "arn:aws:s3:::aws-ssm-ca-central-1/*"
              - "arn:aws:s3:::aws-windows-downloads-ca-central-1/*"
              - "arn:aws:s3:::amazon-ssm-ca-central-1/*"
              - "arn:aws:s3:::amazon-ssm-packages-ca-central-1/*"
              - "arn:aws:s3:::ca-central-1-birdwatcher-prod/*"
              - "arn:aws:s3:::patch-baseline-snapshot-ca-central-1/*"
          - Effect: "Allow"
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:PutObjectAcl"
              - "s3:GetEncryptionConfiguration"
            Resource:
              - !Join ['', ["arn:aws:s3:::", "{{resolve:ssm:S3BucketNamePrefix:1}}", "-", !Ref "AWS::AccountId", "-ec2patching/*" ]]
              - !Join ['', ["arn:aws:s3:::", "{{resolve:ssm:S3BucketNamePrefix:1}}", "-", !Ref "AWS::AccountId", "-ec2patching/" ]]
  ManagedInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ised-managed-instance-profile
      Roles:
        - !Ref ManagedInstanceRole
  NexusRole:
    Type: AWS::IAM::Role
    Condition: IsCotsAccount
    Properties:
      RoleName: ised-nexus-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        # Role for patching
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        # Role for Cloudwatch
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy  
  NexusVolumeTaggingPolicy:
    Type: AWS::IAM::Policy
    Condition: IsCotsAccount
    Properties:
      Roles: 
        - !Ref NexusRole
      PolicyName: ised-nexus-volume-tagging-policy
      # Permissions for the EC2 to tag the volumes (ex: root) from User Data
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            "Action":
              - "ec2:CreateTags"
            Resource:
              - "arn:aws:ec2:*:*:instance/*"
              - "arn:aws:ec2:*:*:volume/*"
          - Effect: "Allow"
            Action: "ec2:DescribeInstances"
            Resource: "*"
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Condition: IsCotsAccount
    Properties:
      InstanceProfileName: ised-nexus-ec2-instance-profile
      Roles: 
        - !Ref NexusRole
  IsedAdminRole:
    Type: AWS::IAM::Role
    Condition: IsNotMaster
    DeletionPolicy: Retain
    Properties:
      RoleName: ised-admin-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: {AWS: 256255698049}
          Action: ['sts:AssumeRole']
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess  
      Tags:
        - Key: Name
          Value: !Join ['-', ["role", !Ref "AWS::AccountId", ised-admin-role ] ]
        - Key: ised-cost-centre
          Value: cio-rdad
        - Key: ised-project-id
          Value: cops-aws
        - Key: ised-environment
          Value: ops
  LambdaExecutionRole:
    Description: roles CF. Used by VPC template to calculate subnet sizes
    Type: AWS::IAM::Role
    Properties:
      RoleName: ised-vpc-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: {Service: [lambda.amazonaws.com]}
          Action: ['sts:AssumeRole']
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: Name
          Value: !Join ['-', ["role", !Ref "AWS::AccountId", ised-vpc-lambda-execution-role ] ]
        - Key: ised-cost-centre
          Value: cio-rdad
        - Key: ised-project-id
          Value: cops-aws
        - Key: ised-environment
          Value: ops
  VPCFlowLogRole:
    Description: roles CF. Used by VPC template send logs to cloud watch
    Type: AWS::IAM::Role
    Properties:
      RoleName: ised-vpc-flow-log-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal: {Service: [vpc-flow-logs.amazonaws.com]}
          Action: ['sts:AssumeRole']
      Policies:
      - PolicyName: "VPCFlowLogsRole"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
              - "logs:PutLogEvents"
            Resource: "*" 
      Tags:
        - Key: Name
          Value: !Join ['-', ["role", !Ref "AWS::AccountId", ised-vpc-flow-log-role ] ]
        - Key: ised-cost-centre
          Value: cio-rdad
        - Key: ised-project-id
          Value: cops-aws
        - Key: ised-environment
          Value: ops
  ConfigLambdaRole:
    Description: This role is used by the lambda function "Ised-CreateJiraIssue"
    Type: AWS::IAM::Role
    Properties:
      RoleName: ised-config-lambda-execution-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/ResourceGroupsandTagEditorReadOnlyAccess
      Path: /
  AutomationRole:
    Type: AWS::IAM::Role
    Description: This role is used by the SSM document to invoke the lambda function "Ised-CreateJiraIssue"
    Properties:
      RoleName: ised-config-automation-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - ssm.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      Path: /
      Policies:
       - PolicyName: "root"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
             - Effect: "Allow"
               Action: 
               - "lambda:*"
               - "iam:PassRole"
               Resource: "*"
  BackupRole:
    Type: AWS::IAM::Role
    Description: Provides AWS Backup permission to create backups and perform restores on your behalf across AWS services.
    Properties:
      RoleName: ised-backup-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - backup.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores
      Path: /
  DataLifecycleManagerRole:
    Type: AWS::IAM::Role
    Description: Provides AWS Data Lifecycle Manager to manage the lifecycle of your AWS resources. 
    Properties:
      RoleName: ised-backup-lifecycle-manager-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - dlm.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSDataLifecycleManagerServiceRole
      Path: /
  OpenShiftEC2Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-ec2-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # Required EC2 permissions for installation
              - ec2:AllocateAddress
              - ec2:AssociateAddress
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CopyImage
              - ec2:CreateNetworkInterface
              - ec2:CreateSecurityGroup
              - ec2:CreateTags
              - ec2:CreateVolume
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSnapshot
              - ec2:DeregisterImage
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeDhcpOptions
              - ec2:DescribeImages
              - ec2:DescribeInstanceAttribute
              - ec2:DescribeInstanceCreditSpecifications
              - ec2:DescribeInstances
              - ec2:DescribeInternetGateways
              - ec2:DescribeKeyPairs
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkAcls
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribePrefixLists
              - ec2:DescribeRegions
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVolumes
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeVpcs
              - ec2:ModifyInstanceAttribute
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ReleaseAddress
              - ec2:RevokeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:RunInstances
              - ec2:TerminateInstances
              - ec2:AssociateDhcpOptions
              - ec2:AssociateRouteTable
              - ec2:AttachInternetGateway
              - ec2:CreateDhcpOptions
              - ec2:CreateInternetGateway
              - ec2:CreateNatGateway
              - ec2:CreateRoute
              - ec2:CreateRouteTable
              - ec2:CreateSubnet
              - ec2:CreateVpc
              - ec2:CreateVpcEndpoint
              - ec2:ModifySubnetAttribute
              - ec2:ModifyVpcAttribute
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftElbPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-elb-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # Required Elasticloadbalancing permissions for installation
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:ApplySecurityGroupsToLoadBalancer
              - elasticloadbalancing:AttachLoadBalancerToSubnets
              - elasticloadbalancing:ConfigureHealthCheck
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateLoadBalancerListeners
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:SetLoadBalancerPoliciesOfListener
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftIamPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-iam-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # Required IAM permissions for installation
              - iam:AddRoleToInstanceProfile
              - iam:CreateInstanceProfile
              - iam:CreateRole
              - iam:DeleteInstanceProfile
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:GetInstanceProfile
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:GetUser
              - iam:ListInstanceProfilesForRole
              - iam:ListRoles
              - iam:ListUsers
              - iam:PassRole
              - iam:PutRolePolicy
              - iam:RemoveRoleFromInstanceProfile
              - iam:SimulatePrincipalPolicy
              - iam:TagRole
              - iam:CreateAccessKey
              - iam:CreateUser
              - iam:DeleteAccessKey
              - iam:DeleteUser
              - iam:DeleteUserPolicy
              - iam:GetUserPolicy
              - iam:ListAccessKeys
              - iam:PutUserPolicy
              - iam:TagUser
              - iam:CreateServiceLinkedRole 
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftRoute53Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-route53-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # Required Route53 permissions for installation
              - route53:ChangeResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:CreateHostedZone
              - route53:DeleteHostedZone
              - route53:GetChange
              - route53:GetHostedZone
              - route53:ListHostedZones
              - route53:ListHostedZonesByName
              - route53:ListResourceRecordSets
              - route53:ListTagsForResource
              - route53:UpdateHostedZoneComment
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftS3Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-s3-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # Required S3 permissions for installation
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:GetAccelerateConfiguration
              - s3:GetBucketCors
              - s3:GetBucketLocation
              - s3:GetBucketLogging
              - s3:GetBucketObjectLockConfiguration
              - s3:GetBucketReplication
              - s3:GetBucketRequestPayment
              - s3:GetBucketTagging
              - s3:GetBucketVersioning
              - s3:GetBucketWebsite
              - s3:GetEncryptionConfiguration
              - s3:GetLifecycleConfiguration
              - s3:GetReplicationConfiguration
              - s3:ListBucket
              - s3:PutBucketAcl
              - s3:PutBucketTagging
              - s3:PutEncryptionConfiguration
              - s3:PutLifecycleConfiguration
              - s3:HeadBucket
              - s3:ListBucketMultipartUploads
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftS3ClusterPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-s3-cluster-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # S3 permissions that cluster Operators require
              - s3:DeleteObject
              - s3:GetObject
              - s3:GetObjectAcl
              - s3:GetObjectTagging
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutObjectTagging
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftDeleteClusterPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Condition: IsOpenShiftAccount
    Properties:
      ManagedPolicyName: ised-opeenshift-delete-cluster-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:      
              # Required permissions to delete base cluster resources 
              - autoscaling:DescribeAutoScalingGroups
              - ec2:DeleteNetworkInterface
              - ec2:DeleteVolume
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:DescribeTargetGroups
              - iam:ListInstanceProfiles
              - iam:ListRolePolicies
              - iam:ListUserPolicies
              - s3:DeleteObject
              - tag:GetResources
              - tag:TagResources
              - tag:UntagResources
              - ec2:DeleteDhcpOptions
              - ec2:DeleteInternetGateway
              - ec2:DeleteNatGateway
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteSubnet
              - ec2:DeleteVpc
              - ec2:DeleteVpcEndpoints
              - ec2:DetachInternetGateway
              - ec2:DisassociateRouteTable
              - ec2:ReplaceRouteTableAssociation
            Resource: '*'
      Users: 
        - !Ref OpenShiftInstallUser
  OpenShiftInstallUser:
    Type: AWS::IAM::User
    Condition: IsOpenShiftAccount
    Properties:
      UserName: ised-openshift-install-user
      LoginProfile:
        Password: "CanadaIsed123!"
        PasswordResetRequired: true
Outputs:
  RoleLambdaExecution:
    Description: LambdaExecutionRole
    Value: !GetAtt LambdaExecutionRole.Arn
    Export: 
      Name: LambdaExecutionRole
  RoleVPCFlowLog:
    Description: VPCFlowLogRole
    Value: !GetAtt VPCFlowLogRole.Arn
    Export: 
      Name: VPCFlowLogRole
  RoleAdmin:
    Condition: IsNotMaster
    Description: IsedAdminRole
    Value: !GetAtt IsedAdminRole.Arn
    Export: 
      Name: IsedAdminRole
  ConfigLambdaRole:
    Description: ConfigLambdaRole
    Value: !GetAtt ConfigLambdaRole.Arn
    Export: 
      Name: ConfigLambdaRole
  AutomationRole:
    Description: AutomationRole
    Value: !GetAtt AutomationRole.Arn
    Export: 
      Name: AutomationRole
  NexusRole:
    Condition: IsCotsAccount
    Description: NexusRole
    Value: !GetAtt NexusRole.Arn
    Export: 
      Name: NexusRole
  NexusVolumeTaggingPolicy:
    Condition: IsCotsAccount
    Description: NexusVolumeTaggingPolicy
    Value: !Ref NexusVolumeTaggingPolicy
    Export: 
      Name: NexusVolumeTaggingPolicy
  EC2InstanceProfile:
    Condition: IsCotsAccount
    Description: EC2InstanceProfile
    Value: !Ref EC2InstanceProfile
    Export: 
      Name: EC2InstanceProfile
  BackupRole:
    Description: BackupRole
    Value: !GetAtt BackupRole.Arn
    Export: 
      Name: BackupRole
  DataLifecycleManagerRole:
    Description: DataLifecycleManagerRole
    Value: !GetAtt DataLifecycleManagerRole.Arn
    Export: 
      Name: DataLifecycleManagerRole
  ManagedInstanceRole:
    Description: ManagedInstanceRole
    Value: !GetAtt ManagedInstanceRole.Arn
    Export:
      Name: ManagedInstanceRole
  ManagedInstanceProfile:
    Description: ManagedInstanceProfile
    Value: !Ref ManagedInstanceProfile
    Export:
      Name: ManagedInstanceProfile
